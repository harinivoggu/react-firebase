{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","App","useState","newname","setnewname","newage","setnewage","users","setUsers","usercollectionref","collection","deleteuser","id","a","current","doc","deleteDoc","window","location","reload","updateuserage","updateDoc","age","updateusername","Name","createuser","addDoc","useEffect","getUsers","getDocs","data","docs","map","className","placeholder","onChange","event","target","value","type","onClick","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAYQA,EAAMC,YATS,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAIMC,EAAGC,YAAaT,G,gBCwDhBU,MAhEf,WACI,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAAmBC,YAAWX,EAAG,SAEjCY,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACXC,EAAQC,YAAIhB,EAAG,QAAQa,GADZ,SAEXI,YAAUF,GAFC,OAGjBG,OAAOC,SAASC,SAHC,2CAAH,sDAMVC,EAAa,uCAAG,WAAOR,GAAP,eAAAC,EAAA,6DACdC,EAAQC,YAAIhB,EAAG,QAAQa,GADT,SAEdS,YAAUP,EAAS,CAACQ,IAAKjB,IAFX,OAGpBY,OAAOC,SAASC,SAHI,2CAAH,sDAKbI,EAAc,uCAAG,WAAOX,GAAP,eAAAC,EAAA,6DACfC,EAAQC,YAAIhB,EAAG,QAAQa,GADR,SAEfS,YAAUP,EAAS,CAACU,KAAMrB,IAFX,OAGrBc,OAAOC,SAASC,SAHK,2CAAH,sDAKdM,EAAU,uCAAI,sBAAAZ,EAAA,sEACZa,YAAOjB,EAAmB,CAACe,KAAMrB,EAASmB,IAAKjB,IADnC,OAElBY,OAAOC,SAASC,SAFE,2CAAJ,qDAejB,OAXCQ,qBAAU,WACR,IAAMC,EAAQ,uCAAE,4BAAAf,EAAA,sEACOgB,YAAQpB,GADf,OACNqB,EADM,OAEZtB,EAASsB,EAAKC,KAAKC,KAAI,SAACjB,GAAD,mBAAC,eAAaA,EAAIe,QAAlB,IAAyBlB,GAAIG,EAAIH,SAF5C,2CAAF,qDAIdgB,MAEF,IAIO,sBAAKK,UAAU,MAAf,UACN,6CACA,uBAAOC,YAAY,SAASC,SAAU,SAACC,GAAWhC,EAAWgC,EAAMC,OAAOC,UAC1E,uBAAOC,KAAM,SAASL,YAAY,QAAOC,SAAU,SAACC,GAAW9B,EAAU8B,EAAMC,OAAOC,UACtF,wBAAQE,QAASf,EAAjB,yBACClB,EAAMyB,KAAI,SAACS,GACV,OACE,gCACG,IACD,yCAAYA,EAAKjB,QACjB,uCAAUiB,EAAKnB,OACf,uBAAOY,YAAY,cAAcC,SAAU,SAACC,GAAWhC,EAAWgC,EAAMC,OAAOC,UAC/E,wBAAQE,QAAS,WACfjB,EAAekB,EAAK7B,KADtB,uBAEA,uBAAOsB,YAAY,aAAaC,SAAU,SAACC,GAAW9B,EAAU8B,EAAMC,OAAOC,UAC7E,wBAAQE,QAAS,WACfpB,EAAcqB,EAAK7B,KADrB,sBAEA,wBAAQ4B,QAAS,WACf7B,EAAW8B,EAAK7B,KADlB,8BCtDX8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1ab3fa44.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {getFirestore} from \"@firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDxJD5w5m9jC_vP4sIBeo4x27uv1tSTAao\",\r\n  authDomain: \"harini-2a27d.firebaseapp.com\",\r\n  projectId: \"harini-2a27d\",\r\n  storageBucket: \"harini-2a27d.appspot.com\",\r\n  messagingSenderId: \"116240791532\",\r\n  appId: \"1:116240791532:web:dae516b351b91a9eb0b2c9\"\r\n};\r\n  \r\n  const app = initializeApp(firebaseConfig);\r\n  export const db=getFirestore(app);","\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport {db} from './firebase';\nimport {collection, getDocs, addDoc,updateDoc, doc, deleteDoc} from 'firebase/firestore';\nfunction App() {\n    const [newname, setnewname]= useState(\"\")\n    const [newage, setnewage]=useState(0)\n\n    const [users, setUsers] = useState([]);\n    const usercollectionref= collection(db,\"table\");\n\n    const deleteuser = async (id) => {\n      const current=doc(db,\"table\",id)\n      await deleteDoc(current);\n      window.location.reload();\n    }\n\n    const updateuserage = async (id) => {\n      const current=doc(db,\"table\",id)\n      await updateDoc(current, {age: newage});\n      window.location.reload();\n    }\n    const updateusername = async (id) => {\n      const current=doc(db,\"table\",id)\n      await updateDoc(current, {Name: newname});\n      window.location.reload();\n    }\n    const createuser =  async () => {\n      await addDoc(usercollectionref, {Name: newname, age: newage});\n      window.location.reload();\n    }\n    useEffect(() => {\n      const getUsers= async () => {\n          const data = await getDocs(usercollectionref);\n          setUsers(data.docs.map((doc) => ({...doc.data(),id: doc.id})));\n      };\n      getUsers();\n    },\n    []);\n\n\n\n   return( <div className=\"App\">\n     <h1>Create user</h1>\n     <input placeholder=\" name \" onChange={(event) => {setnewname(event.target.value);}}/>\n     <input type= \"number\" placeholder=\"age  \"onChange={(event) => {setnewage(event.target.value);}}/>\n     <button onClick={createuser}>create user</button>\n     {users.map((user) => {\n       return (\n         <div>\n           {\" \"}\n           <h1> Name: {user.Name}</h1>\n           <h1>age: {user.age}</h1>\n           <input placeholder=\" edit name \" onChange={(event) => {setnewname(event.target.value);}}/>\n           <button onClick={() => { \n             updateusername(user.id)}}>edit name</button>\n           <input placeholder=\" edit age \" onChange={(event) => {setnewage(event.target.value);}}/>\n           <button onClick={() => { \n             updateuserage(user.id)}}>edit age</button>\n           <button onClick={() => {\n             deleteuser(user.id)}}>delete</button>\n        </div>\n       );\n     })}\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}